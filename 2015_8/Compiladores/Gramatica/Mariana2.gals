#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Full
Input = Stream
Parser = LL
#RegularDefinitions
WS:[\ \n \t]
//DIGITOS
D:[0-9]
//LETRAS
L:[A-Za-z]
S:[\- \+]
#Tokens
:{WS}*

//Tokens de Comandos
inicio: "begin"
fim: "end"
escrever: "output"
ler: "input"
condicao_se: "if"
senao: "@"
inicio_loop: "do"
condicao_loop: "done"
condicao_para: "for"
a_partir_de: "from"
ate: "to"
fim_para: "fend"



//Tokens de Logica e Matematica

logica_maior_que:">="
logica_menor_que:"<="
logica_igual:"=="
logica_maior:">"
logica_menor:"<"
logica_diferente:"!="

matematica_soma:"+"
matematica_subtracao:"-"
matematica_multiplicacao:"*"
matematica_divisao:"/"
matematica_igual:"="

final_linha:";"
dois_pontos:":"
ponto_interrogacao:"?"
abre_parenteses:\(
fecha_parenteses:\)


//Tokens de Tipo
tipo: "int"
variavel: {L}({L}|{D})*
texto: \".*\"
numero: {D}*
incremento: {S}({D})*
#NonTerminals
//COMANDOS
<INICIO_FIM>
<CODIGO>

//Comandos
<COMANDO>

//Declaração e Atribuição
<DECLARACAO>
<ARIBUICAO>

//Argumentos
<ARGUMENTO>
<ARGUMENTO_TEXTO>
<ARGUMENTO_NUMERICO>

//Verifica expressao
<CALCULO>
<EXPRESSAO>
<LOGICA>
<EXPRESSAO_MATEMATICA>

//Logica e Matematica
<OP_LOGICA>
<OP_MATEMATICA>
#Grammar
//Estrutura Global do programa
<INICIO_FIM> ::= inicio <CODIGO> fim;

//Estrutura do Codigo
<CODIGO> ::=  <COMANDO> <CODIGO>;
<CODIGO> ::= î;

//Comandos
<COMANDO> ::= escrever abre_parenteses <ARGUMENTO> fecha_parenteses final_linha;
<COMANDO> ::= ler abre_parenteses variavel fecha_parenteses final_linha;
<COMANDO> ::= condicao_se <EXPRESSAO> ponto_interrogacao <CODIGO> senao <CODIGO> ponto_interrogacao final_linha;

<COMANDO> ::= condicao_para <LOGICA> abre_parenteses <ARGUMENTO_NUMERICO> final_linha incremento fecha_parenteses dois_pontos <CODIGO> fim_para final_linha;

<COMANDO> ::= inicio_loop dois_pontos <CODIGO> condicao_loop <EXPRESSAO> final_linha;
<COMANDO> ::= <DECLARACAO> final_linha;
<COMANDO> ::= <ARIBUICAO> final_linha;

//Verifica Expressao
<EXPRESSAO> ::= abre_parenteses <LOGICA> fecha_parenteses;
<LOGICA> ::= <ARGUMENTO_NUMERICO> <OP_LOGICA> <ARGUMENTO_NUMERICO>;

<CALCULO> ::= <ARGUMENTO_NUMERICO> <EXPRESSAO_MATEMATICA>;
<CALCULO> ::= abre_parenteses <CALCULO> fecha_parenteses <EXPRESSAO_MATEMATICA>;
<EXPRESSAO_MATEMATICA> ::= <OP_MATEMATICA> <CALCULO>;
<EXPRESSAO_MATEMATICA> ::= î;

//Declaração e Atribuição
<DECLARACAO> ::= tipo variavel  ;
<ARIBUICAO> ::= variavel matematica_igual <CALCULO> ;

//Argumentos
<ARGUMENTO> ::= <ARGUMENTO_TEXTO> | <ARGUMENTO_NUMERICO>;
<ARGUMENTO_TEXTO> ::= texto;
<ARGUMENTO_NUMERICO> ::= numero;
<ARGUMENTO_NUMERICO> ::= variavel;

//Logica e Matematica
<OP_LOGICA> ::= logica_maior_que;
<OP_LOGICA> ::= logica_menor_que;
<OP_LOGICA> ::= logica_igual;
<OP_LOGICA> ::= logica_maior;
<OP_LOGICA> ::= logica_menor;
<OP_LOGICA> ::= logica_diferente;

<OP_MATEMATICA> ::= matematica_soma;
<OP_MATEMATICA> ::= matematica_subtracao;
<OP_MATEMATICA> ::= matematica_multiplicacao;
<OP_MATEMATICA> ::= matematica_divisao;
<OP_MATEMATICA> ::= matematica_igual;
