//#include <Comunicação_RX_TX_LCD_e_Potenciometro.h>

#include <16F877A.h>
#device ADC=10

#FUSES NOBROWNOUT               //No brownout reset
#FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O

#use delay(crystal=20000000)
#use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=PORT1)

#define LCD_RS_PIN         pin_d0
#define LCD_RW_PIN         pin_d1
#define LCD_ENABLE_PIN     pin_d2
#define LCD_DATA4          pin_d3
#define LCD_DATA5          pin_d4
#define LCD_DATA6          pin_d5
#define LCD_DATA7          pin_d6

#include <lcd.c>

unsigned int getValueLSB, getValueMSB;
unsigned int16 convertTo16Bits;

unsigned int16 value;
unsigned int oldValue = 0;
unsigned int valueLSB, valueMSB;
float v;

#INT_RDA
void RDA_isr(void){
   getValueLSB = getc();
   getValueMSB = getc();
   convertTo16Bits = make16(getValueMSB, getValueLSB);
   lcd_gotoxy(8, 1);
   printf(lcd_putc, "\fIFMT");
   lcd_gotoxy(1, 2);
   //v = (recebido16*5)/1023;
   printf(lcd_putc, "Valor: %lu", convertTo16Bits);
}

void main()
{
   setup_ADC(ADC_CLOCK_INTERNAL);  
   setup_adc_ports(AN0); 
   set_adc_channel(0);
   delay_us(10);
   
   enable_interrupts(INT_RDA);
   enable_interrupts(GLOBAL);
   
   lcd_init();
   while(TRUE)
   {
      value = read_adc();
      if(value != oldValue){
         valueLSB = make8(value, 0);
         valueMSB = make8(value, 1);
         putc(valueLSB);
         putc(valueMSB);
      }
      oldValue = value;
      delay_ms(100);
   }
}

