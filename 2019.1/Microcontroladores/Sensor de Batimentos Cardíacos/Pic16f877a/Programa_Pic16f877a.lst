CCS PCM C Compiler, Version 5.081, 13314               07-abr-19 19:28

               Filename:   C:\Users\pedro\OneDrive\Faculdade\Faculdade\2019.1\Microcontroladores\Sensor de Batimentos Cardíacos\Programa_Pic16f877a.lst

               ROM used:   177 words (2%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           16 (4%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   075
0003:  NOP
.................... //#include <Programa_Pic16f877a.h> 
....................  
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
0004:  CLRF   2A
0005:  MOVF   04,W
0006:  MOVWF  29
0007:  BCF    2A.0
0008:  BTFSC  03.7
0009:  BSF    2A.0
000A:  SWAPF  23,W
000B:  IORLW  F0
000C:  MOVWF  25
000D:  ADDWF  25,F
000E:  ADDLW  E2
000F:  MOVWF  26
0010:  ADDLW  32
0011:  MOVWF  28
0012:  MOVF   23,W
0013:  ANDLW  0F
0014:  ADDWF  26,F
0015:  ADDWF  26,F
0016:  ADDWF  28,F
0017:  ADDLW  E9
0018:  MOVWF  27
0019:  ADDWF  27,F
001A:  ADDWF  27,F
001B:  SWAPF  22,W
001C:  ANDLW  0F
001D:  ADDWF  27,F
001E:  ADDWF  28,F
001F:  RLF    27,F
0020:  RLF    28,F
0021:  COMF   28,F
0022:  RLF    28,F
0023:  MOVF   22,W
0024:  ANDLW  0F
0025:  ADDWF  28,F
0026:  RLF    25,F
0027:  MOVLW  07
0028:  MOVWF  24
0029:  MOVLW  0A
002A:  ADDWF  28,F
002B:  DECF   27,F
002C:  BTFSS  03.0
002D:  GOTO   02A
002E:  ADDWF  27,F
002F:  DECF   26,F
0030:  BTFSS  03.0
0031:  GOTO   02E
0032:  ADDWF  26,F
0033:  DECF   25,F
0034:  BTFSS  03.0
0035:  GOTO   032
0036:  ADDWF  25,F
0037:  DECF   24,F
0038:  BTFSS  03.0
0039:  GOTO   036
003A:  MOVLW  24
003B:  MOVWF  04
003C:  BCF    03.7
003D:  MOVLW  07
003E:  ANDWF  29,W
003F:  BCF    29.6
0040:  ADDWF  04,F
0041:  MOVLW  28
0042:  SUBWF  04,W
0043:  BTFSC  03.2
0044:  BSF    29.6
0045:  MOVF   00,W
0046:  MOVWF  77
0047:  BTFSS  03.2
0048:  GOTO   051
0049:  BTFSC  29.6
004A:  GOTO   051
004B:  BTFSC  29.4
004C:  GOTO   059
004D:  BTFSC  29.3
004E:  GOTO   051
004F:  MOVLW  20
0050:  GOTO   054
0051:  BSF    29.3
0052:  BCF    29.4
0053:  MOVLW  30
0054:  ADDWF  77,F
0055:  MOVF   77,W
0056:  BTFSS  0C.4
0057:  GOTO   056
0058:  MOVWF  19
0059:  INCF   04,F
005A:  BTFSS  29.6
005B:  GOTO   041
005C:  BCF    0A.3
005D:  BCF    0A.4
005E:  GOTO   0A4 (RETURN)
....................  
.................... #list 
....................  
.................... #device ADC=10 
....................  
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
005F:  MOVLW  22
0060:  MOVWF  04
0061:  BCF    03.7
0062:  MOVF   00,W
0063:  BTFSC  03.2
0064:  GOTO   072
0065:  MOVLW  06
0066:  MOVWF  78
0067:  CLRF   77
0068:  DECFSZ 77,F
0069:  GOTO   068
006A:  DECFSZ 78,F
006B:  GOTO   067
006C:  MOVLW  7B
006D:  MOVWF  77
006E:  DECFSZ 77,F
006F:  GOTO   06E
0070:  DECFSZ 00,F
0071:  GOTO   065
0072:  BCF    0A.3
0073:  BCF    0A.4
0074:  GOTO   0AF (RETURN)
.................... #use rs232(baud=115200,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=PORT1) 
....................  
....................  
.................... int16 pulse; 
....................  
.................... void main() 
0075:  MOVF   03,W
0076:  ANDLW  1F
0077:  MOVWF  03
0078:  MOVLW  0A
0079:  BSF    03.5
007A:  MOVWF  19
007B:  MOVLW  A6
007C:  MOVWF  18
007D:  MOVLW  90
007E:  BCF    03.5
007F:  MOVWF  18
0080:  BSF    03.5
0081:  BSF    1F.0
0082:  BSF    1F.1
0083:  BSF    1F.2
0084:  BCF    1F.3
0085:  MOVLW  07
0086:  MOVWF  1C
0087:  BCF    03.7
.................... { 
....................    setup_adc_ports(AN0); 
0088:  BCF    1F.0
0089:  BSF    1F.1
008A:  BSF    1F.2
008B:  BSF    1F.3
....................    setup_adc(ADC_CLOCK_DIV_2); 
008C:  BCF    1F.6
008D:  BCF    03.5
008E:  BCF    1F.6
008F:  BCF    1F.7
0090:  BSF    03.5
0091:  BSF    1F.7
0092:  BCF    03.5
0093:  BSF    1F.0
....................  
....................     
....................    while(TRUE) 
....................    { 
....................    pulse = read_adc(); 
0094:  BSF    1F.2
0095:  BTFSC  1F.2
0096:  GOTO   095
0097:  BSF    03.5
0098:  MOVF   1E,W
0099:  BCF    03.5
009A:  MOVWF  20
009B:  MOVF   1E,W
009C:  MOVWF  21
....................    fprintf(PORT1,"%lu\n\r",pulse); 
009D:  MOVLW  10
009E:  MOVWF  04
009F:  MOVF   21,W
00A0:  MOVWF  23
00A1:  MOVF   20,W
00A2:  MOVWF  22
00A3:  GOTO   004
00A4:  MOVLW  0A
00A5:  BTFSS  0C.4
00A6:  GOTO   0A5
00A7:  MOVWF  19
00A8:  MOVLW  0D
00A9:  BTFSS  0C.4
00AA:  GOTO   0A9
00AB:  MOVWF  19
....................    delay_ms(20); 
00AC:  MOVLW  14
00AD:  MOVWF  22
00AE:  GOTO   05F
00AF:  GOTO   094
....................  
....................       //TODO: User Code 
....................    } 
....................  
.................... } 
00B0:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
